name: Haskell CI
on:
  push:
    #branches:
    #  - master
    tags:
      - 'v*'
  #pull_request:
    #branches:
      #- master
jobs:
  windows:
    runs-on: windows-2019

    steps:
      -
        name: Initialize variables
        id: vars
        # package_name is the name from the .cabal file.
        run:
          echo "::set-output name=package_name::pandoc-include-code"

      -
        name: Upload artifact
        env:
          
        shell:
          cmd
#          mkdir ${{ steps.vars.outputs.bindir }}
#          echo "Azaza" > ${{ steps.vars.outputs.bindir }}\${{ steps.vars.outputs.package_name }}
#          more ${{ steps.vars.outputs.bindir }}\${{ steps.vars.outputs.package_name }}
        run: |
          mkdir %APPDATA%\local\bin
          echo Azaza > %APPDATA%\local\bin\${{ steps.vars.outputs.package_name }}
          more %APPDATA%\local\bin\${{ steps.vars.outputs.package_name }}
          move /Y %APPDATA%\local\bin\${{ steps.vars.outputs.package_name }} ${{ steps.vars.outputs.package_name }}

      -
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: ${{ steps.vars.outputs.package_name }}
          path: ${{ steps.vars.outputs.package_name }}

      -
        name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: create_release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.vars.outputs.package_name }} ${{ github.ref }}
          tag_name: ${{ github.ref }}

      -
        name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ steps.vars.outputs.package_name }}

      -
        name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        with:
          asset_content_type: text/html
          asset_name: "%GITHUB_REF:*refs/tags/v=%"
          asset_path: ${{ steps.vars.outputs.package_name }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
